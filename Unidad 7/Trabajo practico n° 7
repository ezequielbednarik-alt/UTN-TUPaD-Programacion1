#1) Dado el diccionario precios_frutas
#precios_frutas = {'Banana': 1200, 'Anan√°': 2500, 'Mel√≥n': 3000, 'Uva': 1450}
#A√±adir las siguientes frutas con sus respectivos precios:
#‚óè Naranja = 1200
#‚óè Manzana = 1500
#‚óè Pera = 2300 

precios_frutas = {'Banana': 1200, 'Anan√°': 2500, 'Mel√≥n': 3000, 'Uva': 1450}

# A√±adimos las nuevas frutas asignando el valor a la nueva clave
precios_frutas['Naranja'] = 1200
precios_frutas['Manzana'] = 1500
precios_frutas['Pera'] = 2300

# Verificamos el resultado
print(precios_frutas)




#2) Siguiendo con el diccionario precios_frutas que resulta luego de ejecutar el c√≥digo
#desarrollado en el punto anterior, actualizar los precios de las siguientes frutas:
#‚óè Banana = 1330
#‚óè Manzana = 1700
#‚óè Mel√≥n = 2800

precios_frutas = {'Banana': 1200, 'Anan√°': 2500, 'Mel√≥n': 3000,
'Uva': 1450, 'Naranja':1200, 'Manzana': 1500, 'Pera': 2300}

# A√±adimos nuevos valores a las furtas

precios_frutas['Banana'] = 1330
precios_frutas['Manzana'] = 1700
precios_frutas['Mel√≥n'] = 2800

print(precios_frutas)




#3) Siguiendo con el diccionario precios_frutas que resulta luego de ejecutar el c√≥digo
# desarrollado en el punto anterior, crear una lista que contenga √∫nicamente las frutas 
# sin los precios.

# Diccionario actualizado
precios_frutas = {'Banana': 1330,'Anan√°': 2500,'Mel√≥n': 2800,'Uva': 1450,
'Naranja': 1200,'Manzana': 1700,'Pera': 2300}

# Crear lista solo con los nombres de las frutas
precios_frutas = list(precios_frutas)

# Mostrar la lista
print("Lista de frutas:")
print(precios_frutas)




#4) Escrib√≠ un programa que permita almacenar y consultar n√∫meros telef√≥nicos.
#‚Ä¢ Permit√≠ al usuario cargar 5 contactos con su nombre como clave y n√∫mero como valor.
#‚Ä¢ Luego, ped√≠ un nombre y mostrale el n√∫mero asociado, si existe.

# Cargar contactos
contactos = {}
for i in range(5):
    nombre = input(f"Ingrese el nombre del contacto #{i+1}: ")
    numero = input(f"Ingrese el n√∫mero de {nombre}: ")
    contactos[nombre] = numero

# Consultar contacto
consulta = input("\nIngrese el nombre a consultar: ")
if consulta in contactos:
    print(f"{consulta} ‚Üí muestra \"{contactos[consulta]}\"")
else:
    print("Contacto no encontrado.")




#5) Solicita al usuario una frase e imprime:
#‚Ä¢ Las palabras √∫nicas (usando un set).
#‚Ä¢ Un diccionario con la cantidad de veces que aparece cada palabra.

# Solicitar frase al usuario
frase = input("Ingrese una frase: ")

# Separar palabras
palabras = frase.split()

# Obtener palabras √∫nicas
palabras_unicas = set(palabras)

# Contar ocurrencias
recuento = {}
for palabra in palabras:
    if palabra in recuento:
        recuento[palabra] += 1
    else:
        recuento[palabra] = 1

# Mostrar resultados
print(f"Palabras √∫nicas: {palabras_unicas}")
print(f"Recuento: {recuento}")





#6) Permit√≠ ingresar los nombres de 3 alumnos, y para cada uno una tupla de 3 notas.
# Luego, mostr√° el promedio de cada alumno.

# Crear diccionario de alumnos
alumnos = {}

# Cargar datos de 3 alumnos
for i in range(3):
    nombre = input(f"Ingrese el nombre del alumno n¬∞{i+1}: ")
    nota1 = float(input("Nota 1: "))
    nota2 = float(input("Nota 2: "))
    nota3 = float(input("Nota 3: "))
    alumnos[nombre] = (nota1, nota2, nota3)

# Mostrar promedio de cada alumno
print("Promedios de los alumnos:")
for nombre, notas in alumnos.items():
    promedio = sum(notas) / len(notas)
    print(f"Alumno {nombre}: su promedio es: {promedio:.2f}")





#7) Dado dos sets de n√∫meros, representando dos listas de estudiantes que aprobaron
# Parcial 1 y Parcial 2:
# ‚Ä¢ Mostr√° los que aprobaron ambos parciales.
# ‚Ä¢ Mostr√° los que aprobaron solo uno de los dos.
# ‚Ä¢ Mostr√° la lista total de estudiantes que aprobaron al menos un parcial (sin repetir).

# Sets de estudiantes que aprobaron cada parcial
parcial1 = {"Ana", "Luis", "Mar√≠a", "Jorge"}
parcial2 = {"Luis", "Mar√≠a", "Sof√≠a", "Pedro"}

# Estudiantes que aprobaron ambos parciales (intersecci√≥n)
ambos = parcial1 & parcial2

# Estudiantes que aprobaron solo uno (diferencia sim√©trica)
solo_uno = parcial1 ^ parcial2

# Estudiantes que aprobaron al menos uno (uni√≥n)
al_menos_uno = parcial1 | parcial2

# Mostrar resultados
print("Aprobaron ambos parciales:", ambos)
print("Aprobaron solo uno de los dos:", solo_uno)
print("Aprob√≥ al menos un parcial:", al_menos_uno)





#8) Arm√° un diccionario donde las claves sean nombres de productos y los 
#valores su stock. Permit√≠ al usuario:
# ‚Ä¢ Consultar el stock de un producto ingresado.
# ‚Ä¢ Agregar unidades al stock si el producto ya existe.
# ‚Ä¢ Agregar un nuevo producto si no existe.


# Diccionario de productos y stock
stock_productos = {
    "Arroz": 50,
    "Fideos": 30,
    "Aceite": 20
}

# Mostrar productos disponibles
print("Productos actuales:")
for producto, cantidad in stock_productos.items():
    print(f"{producto}: {cantidad} unidades")

# Consultar producto
nombre = input("\nüîç Ingrese el nombre del producto a consultar o actualizar: ").strip()

if nombre in stock_productos:
    print(f"{nombre} tiene {stock_productos[nombre]} unidades en stock.")
    try:
        agregar = int(input(f"¬øCu√°ntas unidades desea agregar a {nombre}? "))
        stock_productos[nombre] += agregar
        print(f"Stock actualizado: {nombre} ‚Üí {stock_productos[nombre]} unidades.")
    except ValueError:
        print("Ingrese un n√∫mero v√°lido.")
else:
    try:
        nuevo_stock = int(input(f"{nombre} no existe. ¬øCu√°ntas unidades desea agregar como nuevo producto? "))
        stock_productos[nombre] = nuevo_stock
        print(f"Producto agregado: {nombre} ‚Üí {nuevo_stock} unidades.")
    except ValueError:
        print("Ingrese un n√∫mero v√°lido.")





#9) Cre√° una agenda donde las claves sean tuplas de (d√≠a, hora) y los valores sean eventos.
# Permit√≠ consultar qu√© actividad hay en cierto d√≠a y hora.


# Agenda con eventos programados
agenda = {
    ("lunes", "07:00"): "Reuni√≥n de jefes",
    ("martes", "14:00"): "Controlar stock",
    ("mi√©rcoles", "09:30"): "Llamada con cliente",
    ("jueves", "14:00"): "Capacitaci√≥n interna",
    ("viernes", "11:00"): "Revisi√≥n de proyecto"
}
# Consulta de actividad
dia = input("Ingrese el d√≠a (ej: lunes): ").strip().lower()
hora = input("Ingrese la hora (ej: 10:00): ").strip()

clave = (dia, hora)

if clave in agenda:
    print(f"Actividad programada para el {dia} a las {hora} Hs : {agenda[clave]}")
else:
    print("No hay actividad programada en ese horario.")





#10) Dado un diccionario que mapea nombres de pa√≠ses con sus capitales, constru√≠ 
#un nuevo diccionario donde:
# ‚Ä¢ Las capitales sean las claves.
# ‚Ä¢ Los pa√≠ses sean los valores.
    
# Diccionario original: pa√≠s ‚Üí capital
paises = {
    "Argentina": "Buenos Aires",
    "Chile": "Santiago",
    "Uruguay": "Montevideo",
    "Paraguay": "Asunci√≥n"
}

# Invertir el diccionario: capital ‚Üí pa√≠s
capitales = {}
for pais, capital in paises.items():
    capitales[capital] = pais

# Mostrar resultado
print("Diccionario invertido (capital ‚Üí pa√≠s):")
print(capitales)


